// Generated by CoffeeScript 1.10.0
(function() {
  var extendModel;

  extendModel = function(model) {
    model.findOne = function(cond, cb) {
      return this.find(cond, 1, function(err, datas) {
        if (err) {
          return cb(err);
        }
        return cb(null, datas[0]);
      });
    };
    return model.createOne = function(data, cb) {
      return this.create([data], function(err, datas) {
        if (err) {
          return cb(err);
        }
        return cb(null, datas[0]);
      });
    };
  };

  module.exports = function(db, models, next) {
    var Shares, Users;
    Users = db.define('users', {
      username: {
        type: 'text',
        size: 200,
        unique: true
      },
      password: {
        type: 'text',
        size: 100
      },
      uk: {
        type: 'integer',
        unique: true
      },
      token: {
        type: 'text',
        unique: true
      },
      cookie: {
        type: 'text'
      }
    });
    extendModel(Users);
    Shares = db.define('shares', {
      shareid: {
        type: 'integer',
        unsigned: true,
        unique: true
      },
      uk: {
        type: 'integer',
        unsigned: true
      },
      pass: {
        type: 'text',
        size: 4
      },
      path: {
        type: 'text'
      }
    });
    extendModel(Shares);
    return db.sync(function(err) {
      if (err) {
        throw err;
      }
      models.Users = Users;
      models.Shares = Shares;
      return next();
    });
  };

}).call(this);
